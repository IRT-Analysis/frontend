name: Deploy Frontend

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  IMAGE_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Telegram - Build Started
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="üîß *Frontend build started* for ${{ github.repository }}" \
            -d parse_mode=Markdown

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create .env.prod file
        run: echo "${{ secrets.ENV_PRODUCTION }}" > .env

      - name: Build Docker Image
        run: |
          docker build -f Dockerfile.prod -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ env.IMAGE_TAG }} .
        # This step is critical ‚Äî if this fails, the next step triggers

      - name: Telegram - Build Failed
        if: failure()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="‚ùå *Build failed* for frontend!" \
            -d parse_mode=Markdown

      - name: Push Docker Image
        if: success()
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ env.IMAGE_TAG }}

      - name: Telegram - Push Success
        if: success()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="üì§ *Frontend image pushed to Docker Hub.*" \
            -d parse_mode=Markdown

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Telegram - Deploy Started
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="üöÄ *Deploying frontend on server...*" \
            -d parse_mode=Markdown

      - name: SSH to Deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST_PRODUCTION }}
          username: ${{ secrets.USERNAME_PRODUCTION }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT_PRODUCTION }}
          script: |
            cd /home/longtr/projects
            sudo docker compose pull frontend
            sudo docker compose up -d frontend

      - name: Telegram - Deploy Success
        if: success()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="‚úÖ *Frontend deployed successfully.*" \
            -d parse_mode=Markdown

      - name: Telegram - Deploy Failed
        if: failure()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="‚ùå *Frontend deployment failed.*" \
            -d parse_mode=Markdown
